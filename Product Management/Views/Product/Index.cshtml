@model X.PagedList.IPagedList<Product_Management.Models.Product>  
@using X.PagedList.Mvc.Core  
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers  

<div class="container py-4">  
    <h2 class="mb-4">Product Catalog</h2>  

    <!-- Search & Filter Form -->  
    <form method="get" class="row g-2 align-items-end mb-4">  
        <div class="col-md-4">  
            <label for="searchString" class="form-label">Search</label>  
            <input type="text"  
                   id="searchString"  
                   name="searchString"  
                   value="@ViewBag.SearchProduct"  
                   class="form-control"  
                   placeholder="Enter product name" />  
        </div>  
        <div class="col-md-4">  
            <label for="categoryId" class="form-label">Category</label>  
            <select id="CategoryID"  
                    name="CategoryID"  
                    class="form-select"  
                    asp-items="ViewBag.Categories">  
                <option value="">All Categories</option>  
            </select>  
        </div>  
        <div class="col-md-4 d-flex">  
            <button type="submit" class="btn btn-primary me-2">Filter</button>  
            <a asp-action="Index" class="btn btn-outline-secondary">Clear All</a>  
        </div>  
    </form>  

    <!-- Products Grid -->  
    <div class="row row-cols-1 row-cols-md-3 g-4">  
        @if (!Model.Any())  
        {  
            <div class="col">  
                <div class="alert alert-warning">No products found.</div>  
            </div>  
        }  
        else  
        {  
            @foreach (var p in Model)  
            {  
                <div class="col">  
                    <div class="card h-100 shadow-sm">  
                        <img src="~/@p.ProductImage"  
                             class="card-img-top"  
                             alt="@p.StockName"  
                             style="object-fit: cover; height: 200px;" />  
                        <div class="card-body d-flex flex-column">  
                            <h5 class="card-title">@p.StockName</h5>  
                            <p class="card-text mb-1"><strong>Code:</strong> @p.StockNo</p>  
                            <p class="card-text mb-1"><strong>Category:</strong> @p.Category?.CategoryName</p>  
                            <p class="card-text mb-3"><strong>Price:</strong> @p.Price</p>  
                            <a asp-action="Edit"  
                               asp-route-id="@p.StockID"  
                               class="btn btn-sm btn-outline-primary mt-auto">  
                                Edit  
                            </a>  
                        </div>  
                    </div>  
                </div>  
            }  
        }  
    </div>  

    <!-- Pagination -->  
    <div class="mt-4 d-flex justify-content-center">  
        @Html.PagedListPager(  
            Model,  
            page => Url.Action("Index", new {   
                page,  
                searchString = ViewBag.SearchString,  
                categoryId = ViewContext.HttpContext.Request.Query["CategoryID"]  
            }),  
            new PagedListRenderOptions  
            {  
                DisplayLinkToFirstPage = PagedListDisplayMode.IfNeeded,  
                DisplayLinkToLastPage = PagedListDisplayMode.IfNeeded,  
                DisplayLinkToPreviousPage = PagedListDisplayMode.Always,  
                DisplayLinkToNextPage = PagedListDisplayMode.Always,  
                MaximumPageNumbersToDisplay = 5,  
                DisplayEllipsesWhenNotShowingAllPageNumbers = true,  
                UlElementClasses = new[] { "pagination" },  
                LiElementClasses = new[] { "page-item" },  
                PageClasses = new[] { "page-link" }  
            }  
        )  
    </div>  
</div>
`